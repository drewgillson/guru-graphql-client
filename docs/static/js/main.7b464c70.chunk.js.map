{"version":3,"sources":["logo.svg","components/Row.js","components/Card.js","components/CardList.js","components/SaveButton.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Text","styled","div","_templateObject","GreenText","_templateObject2","RedText","_templateObject3","NotApplicableText","_templateObject4","Notes","_templateObject5","Row","_ref","_this","name","card","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","handleChange","state","textClicks","e","newValue","setState","props","el","target","key","getAttribute","parentElement","window","jsonForGoogleApps","hasOwnProperty","exists","existingNote","rows","notes","obj","value","previousElementSibling","text","react_default","a","createElement","dangerouslySetInnerHTML","__html","replace","onChange","cols","data-text","onClick","index","aria-label","role","React","Component","Div","Card_templateObject","Container","Card_templateObject2","Title","Card_templateObject3","Remove","Card_templateObject4","Card","isHidden","isRemoved","toggleHidden","remove","title","alt","type","readOnly","checked","map","components_Row","CardList","reviewType","event","forceUpdate","_this2","react_apollo_browser_umd","query","UserQuery","loading","error","data","message","cards","includedCards","filter","arr","indexOf","htmlFor","id","components_Card","gql","CardList_templateObject","graphql","options","variables","pollInterval","SaveButton","save","googleScriptsEndpoint","customer","prompt","console","log","JSON","stringify","fetch","mode","headers","Access-Control-Allow-Origin","method","body","then","response","alert","href","client","ApolloClient","link","HttpLink","uri","process","cache","InMemoryCache","App","className","src","logo","components_CardList","components_SaveButton","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","concat","status","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7b464c70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c35b2089.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Text = styled.div`\n  border-bottom: 1px solid #e6ecf0;\n  padding: 15px 15px;\n  font-size: 14px;\n  line-height: 20px;\n`;\n\nconst GreenText = styled.div`\n  border-bottom: 1px solid #e6ecf0;\n  background-color: #90EE90;\n  padding: 15px 15px;\n  font-size: 14px;\n  line-height: 20px;\n`;\n\nconst RedText = styled.div`\n  border-bottom: 1px solid #e6ecf0;\n  background-color: #F08080;\n  padding: 15px 15px;\n  font-size: 14px;\n  line-height: 20px;\n`;\n\nconst NotApplicableText = styled.div`\n  border-bottom: 1px solid #e6ecf0;\n  background-color: #EEE;\n  padding: 15px 15px;\n  font-size: 14px;\n  line-height: 20px;\n  text-decoration: line-through;\n`;\n\nconst Notes = styled.div`\n  border-bottom: 1px solid #e6ecf0;\n  padding: 15px 15px;\n`\n\nclass Row extends React.Component {\n\n    constructor({name,card}) {\n      super();\n      this.name = name;\n      this.card = card;\n      this.handleClick = this.handleClick.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.state = {textClicks: 0};\n    }\n\n    handleClick(e) {\n        // update the colour of the row:\n        let newValue = this.state.textClicks + 1\n        this.setState((state, props) => ({\n            textClicks: newValue\n        }));\n        if (this.state.textClicks>=3) {\n            let newValue = 0;\n            this.setState((state, props) => ({\n                textClicks: newValue\n            }));\n        }\n\n        // maintain a global shadow JSON object to store the user input\n        let el = e.target;\n        if (!el.getAttribute('data-text')) {\n            el = e.target.parentElement;\n        }\n        for (var key in window.jsonForGoogleApps['cards']) {\n            if (window.jsonForGoogleApps['cards'].hasOwnProperty(key) && key === this.card) {\n                var exists = true;\n                var existingNote = \"\";\n                if (window.jsonForGoogleApps['cards'][key].rows[el.getAttribute('data-text')]) {\n                    existingNote = window.jsonForGoogleApps['cards'][key].rows[el.getAttribute('data-text')].notes\n                }\n                window.jsonForGoogleApps['cards'][key].rows[el.getAttribute('data-text')] = {\"notes\": existingNote, state: newValue};\n                if (newValue > 3) {\n                    delete window.jsonForGoogleApps['cards'][key].rows[el.getAttribute('data-text')]\n                }\n                break;\n            }\n        }\n        if (!exists) {\n            let obj = {};\n            obj[el.getAttribute('data-text')] = {\"notes\": \"\", state: newValue};\n            window.jsonForGoogleApps['cards'][this.card] = {rows: obj};\n        }\n    }\n\n    handleChange(e) {\n        this.setState({value: e.target.value});\n        let el = e.target.parentElement.previousElementSibling;\n        for (var key in window.jsonForGoogleApps['cards']) {\n            if (window.jsonForGoogleApps['cards'].hasOwnProperty(key) && key === this.card) {\n                window.jsonForGoogleApps['cards'][key].rows[el.getAttribute('data-text')].notes = e.target.value;\n                break;\n            }\n        }\n    }\n\n    render() {\n        let LookMLWords = /\\b(access_filter|sql_always_where|required_access_grants|no-report-backend-errors|datagroup_trigger|\\._in_query|system__activity|i__looker|_dialect\\._name|\\$\\{TABLE\\}\\.column|persist_for|label|view_label|group_label|description|value_format|named_value_format|sql_trigger_value)/gi\n        let styledLookMLWords = '<span class=\"lookml\">$1</span>';\n      \n        let ports = /\\b(1551|61616|22|443|587|9000|19999|9999)/gi\n        let styledPorts = '<span class=\"port\">$1</span>'\n      \n        let specialWords = /\\b(mysql_secure_installation|utf8mb4_general_ci|utf8mb4)/gi\n        let styledSpecialWords = '<span class=\"special\">$1</span>'\n    \n        const textClicks = this.state.textClicks;\n        let text = <span dangerouslySetInnerHTML={{__html: this.name.text\n            .replace(LookMLWords, styledLookMLWords)\n            .replace(ports, styledPorts)\n            .replace(specialWords, styledSpecialWords)}}></span>\n\n        let notes = <Notes><textarea onChange={this.handleChange} value={this.state.value} cols=\"90\" rows=\"3\"/></Notes>\n        \n        if (textClicks===0) {\n            return (\n                <Text data-text={this.name.text} onClick={this.handleClick} key={this.name.index}>\n                {text}\n                </Text>\n            );\n        } else if (textClicks===1) {\n            return (\n                <div>\n                    <GreenText data-text={this.name.text} onClick={this.handleClick} key={this.name.index}>\n                        <span aria-label=\"yes\" role=\"img\">👍</span>{text}\n                    </GreenText>\n                    {notes}\n                </div>\n            );\n        } else if (textClicks===2) {\n            return (\n                <div>\n                    <RedText data-text={this.name.text} onClick={this.handleClick} key={this.name.index}>\n                        <span aria-label=\"no\" role=\"img\">👎</span>{text}\n                    </RedText>\n                    {notes}\n                </div>\n            );    \n        } else if (textClicks===3) {\n            return (\n                <div>\n                    <NotApplicableText data-text={this.name.text} onClick={this.handleClick} key={this.name.index}>\n                        {text}\n                    </NotApplicableText>\n                    {notes}\n                </div>\n            );    \n        }\n    }\n}\n\nRow.propTypes = {\n    name: PropTypes.any.isRequired, // eslint-disable-line\n};\n  \nexport default Row;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Row from './Row';\n\nconst Div = styled.div`\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nconst Container = styled.div`\n  margin: auto;\n  width: 600px;\n  max-width: 100%;\n  text-align: left;\n  background-color: #ffffff;\n  border-radius: 2px;\n  box-shadow: 0px 1px 1px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst Title = styled.div`\n  border-bottom: 1px solid #e6ecf0;\n  padding: 15px 15px;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst Remove = styled.div`\n  padding: 15px 15px;\n  float: right;\n  cursor: pointer;\n  color: #ddd;\n`\n\nclass Card extends React.Component {\n\n  constructor({card}) {\n    super();\n    this.card = card;\n    this.state = {\n      isHidden: true,\n      isRemoved: false,\n    }\n    this.toggleHidden = this.toggleHidden.bind(this);\n    this.remove = this.remove.bind(this);\n  }\n\n  toggleHidden () {\n    this.setState({\n      isHidden: !this.state.isHidden\n    })\n  }\n\n  remove() {\n    this.setState({\n      isRemoved: true,\n      isHidden: true\n    })\n  }\n  \n  render() {\n    let title = this.card.title;\n    if (!this.state.isHidden) {\n      return (\n        <Div>\n          <Container>\n            <Title onClick={this.toggleHidden}><input type=\"checkbox\" readOnly checked={!this.state.isHidden}/> {title}</Title>\n            {this.card.rows.map((name, index) => (\n              <Row key={index} card={title} name={name}/>\n            ))}\n          </Container>\n        </Div>\n      );\n    }\n    else if (!this.state.isRemoved) {\n      return (\n        <Div>\n          <Container>\n            <Remove onClick={this.remove} alt=\"Remove\">x</Remove>\n            <Title onClick={this.toggleHidden}><input type=\"checkbox\" readOnly checked={!this.state.isHidden}/> {title}</Title>\n          </Container>\n        </Div>\n      );\n    }\n    else {\n      return (\n        <Div></Div>\n      )\n    }\n  }\n}\n\nCard.propTypes = {\n  card: PropTypes.any.isRequired, // eslint-disable-line\n};\n\nexport default Card;","import React from 'react';\nimport { graphql } from 'react-apollo';\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\n\nclass CardList extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {reviewType: 'lookml'};\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({reviewType: event.target.value});\n    this.forceUpdate();\n  }\n\n  render() {\n    return (\n      <Query query={UserQuery}>\n      {({ loading, error, data }) => {\n\n        if (loading) {\n          return <p>Loading ...</p>;\n        }\n        if (error) {\n          return <p>{error.message}</p>;\n        }\n\n        let cards = data.cards;\n        let includedCards = [];\n\n        switch (this.state.reviewType) {\n          case 'lookml':\n            includedCards = ['LookML Development',\n                             'LookML Project Organization',\n                             'LookML Explore Organization',\n                             'Comprehensive Project, Model & View Organization'];\n          break;\n          case 'architecture':\n            includedCards = ['Application Servers (On-Premise)',\n                             'Application Database (On-Premise)',\n                             'Monitoring',\n                             'Data Security',\n                             'Data Pipeline'];\n          break;\n          case 'dataculture':\n            includedCards = ['User Enablement',\n                             'Content Management']\n          break;\n          case 'performance':\n            includedCards = ['Database Connections',\n                             'Performance',\n                             'Release Management']\n          break;\n          default:\n        }\n\n        cards = cards.filter(function(card, index, arr){\n          return (includedCards.indexOf(card.title) !== -1);\n        });\n\n        return (\n          <div>\n            <label htmlFor=\"reviewType\">Choose Review:</label>\n            <select id=\"reviewType\" value={this.state.reviewType} onChange={this.handleChange}>\n              <option value=\"lookml\">LookML</option>\n              <option value=\"architecture\">On-Premise Architecture</option>\n              <option value=\"dataculture\">Data Culture</option>\n              <option value=\"performance\">Performance</option>\n            </select>\n            <div>\n                {cards.map((card, index) => (\n                  <Card key={card.title} card={card} />\n                ))}\n            </div>\n          </div>\n        )\n      }}\n      </Query>\n    )\n  }\n};\n\nCardList.propTypes = {\n  data: PropTypes.any.isRequired, // eslint-disable-line\n};\n\nexport const UserQuery = gql`\n  query UserQuery {\n    cards (id:[\"TkEzzk6c\" # Database Connections\n              ,\"TbXzz78c\" # Data Pipeline\n              ,\"ckEzzkki\" # Data Security\n              ,\"iqKnn74T\" # Application Servers (On-Premise)\n              ,\"ioEzzokT\" # Application Database (On-Premise)\n              ,\"ikEzzkeT\" # Performance\n              ,\"cAB66Egi\" # Monitoring\n              ,\"ceXzzbRi\" # LookML Development\n              ,\"TqKnnjnc\" # Release Management\n              ,\"T5KnzGqc\" # LookML Project Organization\n              ,\"c8e5bg7i\" # LookML Explore Organization\n              ,\"iGB6RkXT\" # LookML Project, Model & View Organization\n              ,\"TXrjjBpc\" # Content Management\n              ,\"c5KnnjRi\" # User Enablement\n              ]) {\n      title\n      rows {\n        rowId\n        text\n      }\n      statusCode\n    }\n  }\n`;\n\nexport default graphql(UserQuery, {\n  options: () => ({\n    variables: {\n    },\n    pollInterval: 1000000,\n  }),\n})(CardList);\n","import React from 'react';\n\nclass SaveButton extends React.Component {\n\n  constructor() {\n    super();\n    this.save = this.save.bind(this);\n    this.googleScriptsEndpoint = 'https://script.google.com/a/looker.com/macros/s/AKfycbzAAHv7EHgJRbZ5f8IqnK3IPqWDlnuUZWZTC-zIfw/exec';\n  }\n\n  save() {\n    window.jsonForGoogleApps.customer = prompt(\"Who is the customer?\");\n    console.log(JSON.stringify(window.jsonForGoogleApps));\n    fetch(this.googleScriptsEndpoint, {\n        mode: 'no-cors',\n        headers: {\n            'Access-Control-Allow-Origin':'*'\n        },\n        method: 'post',\n        body: JSON.stringify(window.jsonForGoogleApps)\n    }).then(function(response) {\n        console.log(response)\n        alert('Success, check the \"Output from Checklists App\" folder!');\n    });  \n  }\n\n  render() {\n    return (\n        <div>\n            <input type=\"button\" onClick={this.save} value=\"Save to Google Doc\"/> then check the\n            <a href=\"https://drive.google.com/drive/u/0/folders/1VXtp98I-A8MFdo-wN3iHnYOPYtqh8lTI\"> Output from Checklists App</a> folder\n        </div>\n    )\n  }\n}\n\nexport default SaveButton;","import React, { Component } from 'react';\nimport CardList from './components/CardList';\nimport SaveButton from './components/SaveButton';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { ApolloClient } from 'apollo-client';\nimport { ApolloProvider } from 'react-apollo';\nimport { HttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: process.env.REACT_APP_GRAPHQL_ENDPOINT }),\n  cache: new InMemoryCache(),\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h2>Checklists for Best Practices</h2>\n          </div>\n          <div className=\"App-User\">\n            <CardList />\n          </div>\n          <SaveButton />\n        </div>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (!isLocalhost) {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        } else {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'reset-css/reset.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nwindow.jsonForGoogleApps = {customer: \"\", \"cards\": {}};\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}